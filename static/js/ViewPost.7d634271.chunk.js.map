{"version":3,"file":"static/js/ViewPost.7d634271.chunk.js","mappings":"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","sources":["pages/ViewPost/ViewPost.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\"\nimport { useNavigate, useParams } from \"react-router-dom\"\nimport {\n  useFetchCommentsQuery,\n  useFetchCreateCommentMutation,\n  useFetchDeleteCommentMutation,\n} from \"../../store/rtk/comments/commentsApi\"\nimport {\n  useFetchDeletePostMutation,\n  useFetchOnePostQuery,\n  useFetchUpdatePostMutation,\n} from \"../../store/rtk/posts/postsApi\"\nimport { useAppDispatch, useAppSelector } from \"../../hooks/hooks\"\nimport { setRecents } from \"../../store/slices/postsSlice/postsSlice\"\nimport { IComment, ICreateComment, IPostMutation } from \"../../types/types\"\nimport { data } from \"../../store/slices/async/auth/authSlice\"\nimport { TbTrash } from \"react-icons/tb\"\nimport { FiEdit2 } from \"react-icons/fi\"\nimport axios from \"../../axios/axiosConf\"\nimport { HiOutlineUserCircle } from \"react-icons/hi\"\nimport { BsDownload } from \"react-icons/bs\"\nimport { IoArrowBack } from \"react-icons/io5\"\nimport { motion } from \"framer-motion\"\n\nconst ViewPost = () => {\n  const inputFileRef = useRef<HTMLInputElement>(null)\n  const { id } = useParams()\n\n  const { isError: isErrorOnePostData, data: onePostData } =\n    useFetchOnePostQuery(id as string, { refetchOnMountOrArgChange: true })\n  const { data: commentsData } = useFetchCommentsQuery(id as string)\n  const dispatch = useAppDispatch()\n  const [commentValue, setCommentValue] = useState<string>(\"\")\n  const [createComment, { isSuccess: isSuccessComments }] =\n    useFetchCreateCommentMutation()\n  const [removePost] = useFetchDeletePostMutation()\n  const [updatePost, { isSuccess }] = useFetchUpdatePostMutation()\n  const [deleteComment, { isSuccess: isSuccessComment }] =\n    useFetchDeleteCommentMutation()\n  const userData = useAppSelector(data)\n  const [active, setActive] = useState<boolean>(false)\n  const navigate = useNavigate()\n\n  const [imageUrl, setImageUrl] = useState<string>(\"\")\n\n  const [newPost, setNewPost] = useState<IPostMutation>({\n    title: \"\",\n    text: \"\",\n  })\n  const changeHandler = (\n    e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => {\n    setNewPost({\n      ...newPost,\n      [e.target.name]: e.target.value,\n    })\n  }\n\n  const handlerChangeFile = async (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    try {\n      if (event.target.files) {\n        const formData = new FormData()\n        const file = event.target.files[0]\n        formData.append(\"image\", file)\n        const { data } = await axios.post(\"/upload\", formData)\n        setImageUrl(data.url)\n      }\n    } catch (error) {\n      console.log(error)\n      alert(error)\n    }\n  }\n\n  const onCLickEdit = () => {\n    if (onePostData) {\n      setNewPost({ title: onePostData.title, text: onePostData.text })\n    }\n    setActive(!active)\n  }\n\n  const deletePost = async (id: string) => {\n    await removePost(id).unwrap()\n    navigate(\"/\")\n  }\n  const onClickUpdatePost = async (id: string) => {\n    await updatePost({ ...newPost, id, imageUrl }).unwrap()\n    setActive(false)\n  }\n\n  const onClickCreateComment = async ({ postId, comment }: ICreateComment) => {\n    createComment({ postId, comment })\n    setCommentValue(\"\")\n  }\n\n  useEffect(() => {\n    if (onePostData) {\n      dispatch(setRecents(onePostData))\n    }\n  }, [onePostData])\n  const viewPostAnimantion = {\n    visible: (i: number) => ({\n      opacity: 1,\n      y: 0,\n      transition: { delay: i * 0.1 },\n    }),\n    hidden: { opacity: 0, y: 40 },\n  }\n  return (\n    <div\n      className={\n        \"relative bg-white dark:bg-[#292a2d] min-h-[600px] w-full mt-[40px] rounded-3xl p-20 max-md:p-2\"\n      }\n    >\n      <div className=\"flex justify-between items-center\">\n        <button\n          onClick={() => navigate(\"/\")}\n          className=\"flex items-center mr-2 justify-between w-[100px] bg-black rounded-md text-white px-2 h-10\"\n        >\n          <div>Back</div>\n          <div>\n            <IoArrowBack color={\"white\"} size={\"30px\"} />\n          </div>\n        </button>\n        {onePostData?.user.id === userData?.id && (\n          <div className=\"flex justify-between top-7 right-7 w-[220px] h-10 rounded-md\">\n            <button\n              className=\"flex items-center justify-between bg-black text-white rounded-md p-1 w-[100px] h-10\"\n              onClick={() => onCLickEdit()}\n            >\n              <div>Update</div>\n              <div>\n                <FiEdit2 color=\"white\" size={\"30px\"} />\n              </div>\n            </button>\n            <button\n              onClick={() => deletePost(id as string)}\n              className=\"flex items-center justify-between bg-black text-white rounded-md p-1 w-[100px] h-10\"\n            >\n              <div>Delete</div>\n              <div>\n                <TbTrash color=\"white\" size={\"30px\"} />\n              </div>\n            </button>\n          </div>\n        )}\n      </div>\n      {isErrorOnePostData && (\n        <div className=\"text-[40px] text-red-800 font-black\">\n          the post has been deleted or the post does not exist\n        </div>\n      )}\n      {userData && active && (\n        <div className={\"flex flex-col justify-between mb-14 mt-6\"}>\n          <div>\n            <div className=\"font-bold text-base\">Title</div>\n            <input\n              className=\"dark:bg-black dark:text-white text-black bg-[#ccc] rounded h-10 w-full p-2 mb-10 outline-none\"\n              value={newPost.title}\n              name={\"title\"}\n              onChange={changeHandler}\n              placeholder={\"title\"}\n              type=\"text\"\n            />\n          </div>\n          <div>\n            <div className=\"font-bold text-base\">Text</div>\n            <textarea\n              className=\"dark:bg-black dark:text-white text-black bg-[#ccc] rounded w-full p-2 mb-10 min-h-[100px] max-h-[200px] outline-none\"\n              value={newPost.text}\n              name={\"text\"}\n              onChange={changeHandler}\n              placeholder={\"text...\"}\n            />\n          </div>\n          <input\n            ref={inputFileRef}\n            className=\"hidden\"\n            onChange={handlerChangeFile}\n            type=\"file\"\n          />\n\n          <button\n            onClick={() => inputFileRef.current?.click()}\n            className=\"bg-black text-white w-[200px] mx-auto mb-8 px-3 flex justify-between items-center  rounded-md p-1\"\n          >\n            <div>Download Image</div>\n            <div>\n              <BsDownload size={\"40px\"} />\n            </div>\n          </button>\n          {imageUrl && (\n            <img\n              className=\"w-full rounded-xl mb-10\"\n              src={`${process.env.REACT_APP_BACKEND_URL}${imageUrl}`}\n              alt=\"postImage\"\n            />\n          )}\n          <button\n            className=\"text-white bg-black rounded-md w-[50%] h-10 mx-auto\"\n            onClick={() => onClickUpdatePost(id as string)}\n          >\n            Update\n          </button>\n        </div>\n      )}\n\n      <h1 className=\"dark:text-[#999999] text-[36px] font-bold mt-8\">\n        {onePostData?.title}\n      </h1>\n      <div className=\"text-[12px] text-gray-400 mb-9\">\n        {onePostData?.createdAt}\n      </div>\n      <div className=\"mb-4\">\n        {onePostData?.imageUrl ? (\n          <img\n            className=\"w-full rounded-xl\"\n            src={`${process.env.REACT_APP_BACKEND_URL}${onePostData?.imageUrl}`}\n            alt=\"postImg\"\n          />\n        ) : (\n          <img\n            className=\"w-full rounded-xl\"\n            src={`https://via.placeholder.com/800x400.jpg?text=No+Image`}\n            alt=\"postImg\"\n          />\n        )}\n      </div>\n      <p className=\"dark:text-[#999] text-[20px] mb-7\">{onePostData?.text}</p>\n      <div className=\"mb-14\">\n        {commentsData?.map((obj: IComment, index: number) => {\n          return (\n            <motion.div\n              variants={viewPostAnimantion}\n              initial={\"hidden\"}\n              animate=\"visible\"\n              custom={index}\n              key={index}\n              className=\"relative bg-[#e4e3e3] dark:bg-[#333633] dark:text-[#999999] mb-7 rounded-md\"\n            >\n              <div className=\"flex items-center\">\n                <div>\n                  <HiOutlineUserCircle size={\"20px\"} />\n                </div>\n                <div className=\"ml-1 overflow-hidden overflow-ellipsis whitespace-nowrap\">\n                  {obj.user.userName}\n                </div>\n              </div>\n              <div className=\"ml-2 my-2\">{obj.comment}</div>\n              {userData?.id === obj.user.id && (\n                <button\n                  className=\"absolute top-3 right-2\"\n                  onClick={() =>\n                    deleteComment({\n                      postId: id as string,\n                      commentId: obj.id,\n                    })\n                  }\n                >\n                  <TbTrash size={\"30px\"} />\n                </button>\n              )}\n            </motion.div>\n          )\n        })}\n      </div>\n      {!isErrorOnePostData && userData && (\n        <div className=\"flex justify-between max-sm:flex-col\">\n          <input\n            className=\"w-[75%] pl-4 rounded-md dark:bg-gray-500 dark:border-0 border-[#000] border-[1px] h-11 outline-none max-sm:w-full mb-4\"\n            value={commentValue}\n            onChange={(event) => setCommentValue(event?.target.value)}\n            type=\"text\"\n          />\n          <button\n            className=\"w-[20%] dark:bg-gray-500 bg-black text-white h-11 rounded-md font-bold max-sm:w-full\"\n            onClick={() =>\n              onClickCreateComment({\n                postId: id as string,\n                comment: commentValue,\n              })\n            }\n          >\n            Add Comment\n          </button>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default ViewPost\n"],"names":["inputFileRef","useRef","id","useParams","useFetchOnePostQuery","refetchOnMountOrArgChange","isErrorOnePostData","isError","onePostData","data","commentsData","useFetchCommentsQuery","dispatch","useAppDispatch","useState","commentValue","setCommentValue","useFetchCreateCommentMutation","createComment","isSuccess","useFetchDeletePostMutation","removePost","useFetchUpdatePostMutation","updatePost","useFetchDeleteCommentMutation","deleteComment","userData","useAppSelector","active","setActive","navigate","useNavigate","imageUrl","setImageUrl","title","text","newPost","setNewPost","changeHandler","e","target","name","value","handlerChangeFile","event","files","formData","FormData","file","append","axios","url","console","log","alert","deletePost","unwrap","onClickUpdatePost","onClickCreateComment","postId","comment","useEffect","setRecents","viewPostAnimantion","visible","i","opacity","y","transition","delay","hidden","className","onClick","color","size","user","onChange","placeholder","type","ref","current","click","src","process","REACT_APP_BACKEND_URL","alt","createdAt","map","obj","index","variants","initial","animate","custom","userName","commentId"],"sourceRoot":""}
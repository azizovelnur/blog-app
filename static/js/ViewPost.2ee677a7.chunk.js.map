{"version":3,"file":"static/js/ViewPost.2ee677a7.chunk.js","mappings":"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","sources":["pages/ViewPost/ViewPost.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\"\r\nimport { useNavigate, useParams } from \"react-router-dom\"\r\nimport {\r\n  useFetchCommentsQuery,\r\n  useFetchCreateCommentMutation,\r\n  useFetchDeleteCommentMutation,\r\n} from \"../../store/rtk/comments/commentsApi\"\r\nimport {\r\n  useFetchDeletePostMutation,\r\n  useFetchOnePostQuery,\r\n  useFetchUpdatePostMutation,\r\n} from \"../../store/rtk/posts/postsApi\"\r\nimport { useAppDispatch, useAppSelector } from \"../../hooks/hooks\"\r\nimport { setRecents } from \"../../store/slices/postsSlice/postsSlice\"\r\nimport { IComment, ICreateComment, IPostMutation } from \"../../types/types\"\r\nimport { data } from \"../../store/slices/async/auth/authSlice\"\r\nimport { TbTrash } from \"react-icons/tb\"\r\nimport { FiEdit2 } from \"react-icons/fi\"\r\nimport axios from \"../../axios/axiosConf\"\r\nimport { HiOutlineUserCircle } from \"react-icons/hi\"\r\nimport { BsDownload } from \"react-icons/bs\"\r\nimport { IoArrowBack } from \"react-icons/io5\"\r\nimport { motion } from \"framer-motion\"\r\n\r\nconst ViewPost = () => {\r\n  const inputFileRef = useRef<HTMLInputElement>(null)\r\n  const { id } = useParams()\r\n\r\n  const { isError: isErrorOnePostData, data: onePostData } =\r\n    useFetchOnePostQuery(id as string, { refetchOnMountOrArgChange: true })\r\n  const { data: commentsData } = useFetchCommentsQuery(id as string)\r\n  const dispatch = useAppDispatch()\r\n  const [commentValue, setCommentValue] = useState<string>(\"\")\r\n  const [createComment, { isSuccess: isSuccessComments }] =\r\n    useFetchCreateCommentMutation()\r\n  const [removePost] = useFetchDeletePostMutation()\r\n  const [updatePost, { isSuccess }] = useFetchUpdatePostMutation()\r\n  const [deleteComment, { isSuccess: isSuccessComment }] =\r\n    useFetchDeleteCommentMutation()\r\n  const userData = useAppSelector(data)\r\n  const [active, setActive] = useState<boolean>(false)\r\n  const navigate = useNavigate()\r\n\r\n  const [imageUrl, setImageUrl] = useState<string>(\"\")\r\n\r\n  const [newPost, setNewPost] = useState<IPostMutation>({\r\n    title: \"\",\r\n    text: \"\",\r\n  })\r\n  const changeHandler = (\r\n    e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\r\n  ) => {\r\n    setNewPost({\r\n      ...newPost,\r\n      [e.target.name]: e.target.value,\r\n    })\r\n  }\r\n\r\n  const handlerChangeFile = async (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    try {\r\n      if (event.target.files) {\r\n        const formData = new FormData()\r\n        const file = event.target.files[0]\r\n        formData.append(\"image\", file)\r\n        const { data } = await axios.post(\"/upload\", formData)\r\n        setImageUrl(data.url)\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n      alert(error)\r\n    }\r\n  }\r\n\r\n  const onCLickEdit = () => {\r\n    if (onePostData) {\r\n      setNewPost({ title: onePostData.title, text: onePostData.text })\r\n    }\r\n    setActive(!active)\r\n  }\r\n\r\n  const deletePost = async (_id: string) => {\r\n    await removePost(_id).unwrap()\r\n    navigate(\"/\")\r\n  }\r\n  const onClickUpdatePost = async (_id: string) => {\r\n    await updatePost({ ...newPost, _id, imageUrl }).unwrap()\r\n    setActive(false)\r\n  }\r\n\r\n  const onClickCreateComment = async ({ postId, comment }: ICreateComment) => {\r\n    createComment({ postId, comment })\r\n    setCommentValue(\"\")\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (onePostData) {\r\n      dispatch(setRecents(onePostData))\r\n    }\r\n  }, [onePostData])\r\n  const viewPostAnimantion = {\r\n    visible: (i: number) => ({\r\n      opacity: 1,\r\n      y: 0,\r\n      transition: { delay: i * 0.1 },\r\n    }),\r\n    hidden: { opacity: 0, y: 40 },\r\n  }\r\n  return (\r\n    <div\r\n      className={\r\n        \"relative bg-white dark:bg-[#292a2d] min-h-[600px] w-full mt-[40px] rounded-3xl p-20 max-md:p-2\"\r\n      }\r\n    >\r\n      <div className=\"flex justify-between items-center\">\r\n        <button\r\n          onClick={() => navigate(\"/\")}\r\n          className=\"flex items-center mr-2 justify-between w-[100px] bg-black rounded-md text-white px-2 h-10\"\r\n        >\r\n          <div>Back</div>\r\n          <div>\r\n            <IoArrowBack color={\"white\"} size={\"30px\"} />\r\n          </div>\r\n        </button>\r\n        {onePostData?.user._id === userData?._id && (\r\n          <div className=\"flex justify-between top-7 right-7 w-[220px] h-10 rounded-md\">\r\n            <button\r\n              className=\"flex items-center justify-between bg-black text-white rounded-md p-1 w-[100px] h-10\"\r\n              onClick={() => onCLickEdit()}\r\n            >\r\n              <div>Update</div>\r\n              <div>\r\n                <FiEdit2 color=\"white\" size={\"30px\"} />\r\n              </div>\r\n            </button>\r\n            <button\r\n              onClick={() => deletePost(id as string)}\r\n              className=\"flex items-center justify-between bg-black text-white rounded-md p-1 w-[100px] h-10\"\r\n            >\r\n              <div>Delete</div>\r\n              <div>\r\n                <TbTrash color=\"white\" size={\"30px\"} />\r\n              </div>\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n      {isErrorOnePostData && (\r\n        <div className=\"text-[40px] text-red-800 font-black\">\r\n          the post has been deleted or the post does not exist\r\n        </div>\r\n      )}\r\n      {userData && active && (\r\n        <div className={\"flex flex-col justify-between mb-14 mt-6\"}>\r\n          <div>\r\n            <div className=\"font-bold text-base\">Title</div>\r\n            <input\r\n              className=\"dark:bg-black dark:text-white text-black bg-[#ccc] rounded h-10 w-full p-2 mb-10 outline-none\"\r\n              value={newPost.title}\r\n              name={\"title\"}\r\n              onChange={changeHandler}\r\n              placeholder={\"title\"}\r\n              type=\"text\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <div className=\"font-bold text-base\">Text</div>\r\n            <textarea\r\n              className=\"dark:bg-black dark:text-white text-black bg-[#ccc] rounded w-full p-2 mb-10 min-h-[100px] max-h-[200px] outline-none\"\r\n              value={newPost.text}\r\n              name={\"text\"}\r\n              onChange={changeHandler}\r\n              placeholder={\"text...\"}\r\n            />\r\n          </div>\r\n          <input\r\n            ref={inputFileRef}\r\n            className=\"hidden\"\r\n            onChange={handlerChangeFile}\r\n            type=\"file\"\r\n          />\r\n\r\n          <button\r\n            onClick={() => inputFileRef.current?.click()}\r\n            className=\"bg-black text-white w-[200px] mx-auto mb-8 px-3 flex justify-between items-center  rounded-md p-1\"\r\n          >\r\n            <div>Download Image</div>\r\n            <div>\r\n              <BsDownload size={\"40px\"} />\r\n            </div>\r\n          </button>\r\n          {imageUrl && (\r\n            <img\r\n              className=\"w-full rounded-xl mb-10\"\r\n              src={`${process.env.REACT_APP_BACKEND_URL}${imageUrl}`}\r\n              alt=\"postImage\"\r\n            />\r\n          )}\r\n          <button\r\n            className=\"text-white bg-black rounded-md w-[50%] h-10 mx-auto\"\r\n            onClick={() => onClickUpdatePost(id as string)}\r\n          >\r\n            Update\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      <h1 className=\"dark:text-[#999999] text-[36px] font-bold mt-8\">\r\n        {onePostData?.title}\r\n      </h1>\r\n      <div className=\"text-[12px] text-gray-400 mb-9\">\r\n        {onePostData?.createdAt}\r\n      </div>\r\n      <div className=\"mb-4\">\r\n        {onePostData?.imageUrl ? (\r\n          <img\r\n            className=\"w-full rounded-xl\"\r\n            src={`${process.env.REACT_APP_BACKEND_URL}${onePostData?.imageUrl}`}\r\n            alt=\"postImg\"\r\n          />\r\n        ) : (\r\n          <img\r\n            className=\"w-full rounded-xl\"\r\n            src={`https://via.placeholder.com/800x400.jpg?text=No+Image`}\r\n            alt=\"postImg\"\r\n          />\r\n        )}\r\n      </div>\r\n      <p className=\"dark:text-[#999] text-[20px] mb-7\">{onePostData?.text}</p>\r\n      <div className=\"mb-14\">\r\n        {commentsData?.map((obj: IComment, index: number) => {\r\n          return (\r\n            <motion.div\r\n              variants={viewPostAnimantion}\r\n              initial={\"hidden\"}\r\n              animate=\"visible\"\r\n              custom={index}\r\n              key={index}\r\n              className=\"relative bg-[#e4e3e3] dark:bg-[#333633] dark:text-[#999999] mb-7 rounded-md\"\r\n            >\r\n              <div className=\"flex items-center\">\r\n                <div>\r\n                  <HiOutlineUserCircle size={\"20px\"} />\r\n                </div>\r\n                <div className=\"ml-1 overflow-hidden overflow-ellipsis whitespace-nowrap\">\r\n                  {obj.user.userName}\r\n                </div>\r\n              </div>\r\n              <div className=\"ml-2 my-2\">{obj.comment}</div>\r\n              {userData?._id === obj.user._id && (\r\n                <button\r\n                  className=\"absolute top-3 right-2\"\r\n                  onClick={() =>\r\n                    deleteComment({\r\n                      postId: id as string,\r\n                      commentId: obj._id,\r\n                    })\r\n                  }\r\n                >\r\n                  <TbTrash size={\"30px\"} />\r\n                </button>\r\n              )}\r\n            </motion.div>\r\n          )\r\n        })}\r\n      </div>\r\n      {!isErrorOnePostData && userData && (\r\n        <div className=\"flex justify-between max-sm:flex-col\">\r\n          <input\r\n            className=\"w-[75%] pl-4 rounded-md dark:bg-gray-500 dark:border-0 border-[#000] border-[1px] h-11 outline-none max-sm:w-full mb-4\"\r\n            value={commentValue}\r\n            onChange={(event) => setCommentValue(event?.target.value)}\r\n            type=\"text\"\r\n          />\r\n          <button\r\n            className=\"w-[20%] dark:bg-gray-500 bg-black text-white h-11 rounded-md font-bold max-sm:w-full\"\r\n            onClick={() =>\r\n              onClickCreateComment({\r\n                postId: id as string,\r\n                comment: commentValue,\r\n              })\r\n            }\r\n          >\r\n            Add Comment\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ViewPost\r\n"],"names":["inputFileRef","useRef","id","useParams","useFetchOnePostQuery","refetchOnMountOrArgChange","isErrorOnePostData","isError","onePostData","data","commentsData","useFetchCommentsQuery","dispatch","useAppDispatch","useState","commentValue","setCommentValue","useFetchCreateCommentMutation","createComment","isSuccess","useFetchDeletePostMutation","removePost","useFetchUpdatePostMutation","updatePost","useFetchDeleteCommentMutation","deleteComment","userData","useAppSelector","active","setActive","navigate","useNavigate","imageUrl","setImageUrl","title","text","newPost","setNewPost","changeHandler","e","target","name","value","handlerChangeFile","event","files","formData","FormData","file","append","axios","url","console","log","alert","deletePost","_id","unwrap","onClickUpdatePost","onClickCreateComment","postId","comment","useEffect","setRecents","viewPostAnimantion","visible","i","opacity","y","transition","delay","hidden","className","onClick","color","size","user","onChange","placeholder","type","ref","current","click","src","process","alt","createdAt","map","obj","index","variants","initial","animate","custom","userName","commentId"],"sourceRoot":""}